1Ô∏è‚É£ Descriptive Statistics (Basic Summary & Distributions)
What?

    Helps summarize and understand the frequency of categorical variables.

How?

‚úî Frequency Tables (Count of responses for each category)
‚úî Mode Analysis (Most common response per category)
‚úî Cross-tabulations (Comparison of two categorical variables)
‚úî Percentage Analysis (Distribution of responses)
Code Example (Frequency Table)

# Get frequency distribution of SEC categories
sec_distribution = df_expanded["SEC"].value_counts(normalize=True) * 100
print(sec_distribution)


 2. Correlation Between Categorical Variables (Cram√©r‚Äôs V)

You can use Cram√©r‚Äôs V to measure the strength of association between categorical variables.

import numpy as np

# Compute Cram√©r‚Äôs V function
def cramers_v(confusion_matrix):
    chi2 = stats.chi2_contingency(confusion_matrix)[0]
    n = confusion_matrix.sum().sum()
    phi2 = chi2 / n
    r, k = confusion_matrix.shape
    phi2corr = max(0, phi2 - ((k-1)*(r-1)) / (n-1))
    r_corr = r - ((r-1)**2) / (n-1)
    k_corr = k - ((k-1)**2) / (n-1)
    return np.sqrt(phi2corr / min((k_corr-1), (r_corr-1)))

# Apply on SEC vs Panchayat
cramers_v_value = cramers_v(sec_panchayat_table)

print(f"Cram√©r's V Value: {cramers_v_value:.2f}")

# Interpretation
if cramers_v_value < 0.1:
    print("Very weak association between SEC category and Panchayat.")
elif cramers_v_value < 0.3:
    print("Weak association between SEC category and Panchayat.")
elif cramers_v_value < 0.5:
    print("Moderate association between SEC category and Panchayat.")
else:
    print("Strong association between SEC category and Panchayat.")

üìå What this tells you?

    0.0 - 0.1: No relationship
    0.1 - 0.3: Weak relationship
    0.3 - 0.5: Moderate relationship
    0.5 - 1.0: Strong relationship
    
    
2Ô∏è‚É£ Inferential Statistics (Testing Relationships)
What?

    Helps determine if there are statistically significant relationships between survey responses.

How?

‚úî Chi-Square Test (For association between two categorical variables)
‚úî ANOVA (Kruskal-Wallis Test) (If comparing a categorical variable across multiple groups)
‚úî Logistic Regression (If predicting binary categorical outcomes)
Code Example (Chi-Square Test for Panchayat vs SEC Category)

import scipy.stats as stats

# Create a contingency table
contingency_table = pd.crosstab(df_expanded["panchayat_code"], df_expanded["SEC"])

# Perform Chi-Square test
chi2, p, dof, expected = stats.chi2_contingency(contingency_table)

print(f"Chi-Square Statistic: {chi2}")
print(f"P-Value: {p}")  # If p < 0.05, significant relationship exists

3Ô∏è‚É£ Multivariate Analysis (Advanced Statistical Techniques)
What?

    Helps uncover deeper patterns and hidden structures in categorical survey data.

How?

‚úî Principal Component Analysis (PCA) (For dimensionality reduction)
‚úî Cluster Analysis (K-Means, Hierarchical) (To segment respondents)
‚úî Factor Analysis (To find underlying themes)
Code Example (Factor Analysis)

from factor_analyzer import FactorAnalyzer

# Selecting categorical columns for factor analysis
categorical_cols = ["SEC", "kwa_connection", "primary_water_source", "issues_with_water_supply"]
df_factor = pd.get_dummies(df_expanded[categorical_cols], drop_first=True)  # Convert to numerical

# Perform factor analysis
fa = FactorAnalyzer(n_factors=2, rotation="varimax")
fa.fit(df_factor)

# Get factor loadings
factor_loadings = pd.DataFrame(fa.loadings_, index=df_factor.columns)
print(factor_loadings)

4Ô∏è‚É£ Spatial & Temporal Analysis (If applicable)
What?

    Helps analyze the geographical distribution of survey responses (if you have location data).

How?

‚úî Choropleth Maps (Mapping categorical responses by location)
‚úî Time Series Trends (Tracking survey responses over time)
Code Example (Choropleth Map for Water Issues)

import geopandas as gpd

# Assume df_expanded has a column 'panchayat_code' linked to a shapefile
geo_df = gpd.read_file("panchayat_boundaries.shp")
merged_df = geo_df.merge(df_expanded.groupby("panchayat_code")["issues_with_water_supply"].value_counts(), on="panchayat_code")

# Plot map
merged_df.plot(column="issues_with_water_supply", cmap="Reds", legend=True)
plt.title("Water Issues Across Panchayats")
plt.show()

5Ô∏è‚É£ Machine Learning for Categorical Data (Predictive Analysis)
What?

    Helps predict categorical responses based on survey data.

How?

‚úî Decision Trees (For categorical prediction)
‚úî Random Forests (For feature importance)
‚úî Support Vector Machines (SVM) (For classification tasks)
Code Example (Decision Tree to Predict SEC Category)

from sklearn.tree import DecisionTreeClassifier
from sklearn.model_selection import train_test_split

# Selecting categorical predictor variables
X = pd.get_dummies(df_expanded[["kwa_connection", "primary_water_source", "issues_with_water_supply"]], drop_first=True)
y = df_expanded["SEC"]

# Split data
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Train model
clf = DecisionTreeClassifier()
clf.fit(X_train, y_train)

# Predict and evaluate
y_pred = clf.predict(X_test)
accuracy = (y_pred == y_test).mean()
print(f"Decision Tree Accuracy: {accuracy * 100:.2f}%")

Summary of Recommended Analyses
Type of Analysis	Statistical Test	Use Case
Descriptive Statistics	Frequency Tables, Mode, Cross-tabs	Basic understanding of response distributions
Inferential Statistics	Chi-Square, ANOVA, Logistic Regression	Identifying relationships between categorical variables
Multivariate Analysis	Factor Analysis, Cluster Analysis, PCA	Finding hidden structures in categorical data
Spatial & Temporal Analysis	Choropleth Maps, Time Series Trends	Understanding geographical and time-based survey trends
Machine Learning	Decision Trees, Random Forests	Predicting categorical survey responses
Next Steps

If you have a specific research hypothesis, I can help refine the statistical approach further! üöÄ
Let me know what analysis you need most urgently or if you want help interpreting results! üéØ
